model:
  name: stgcn_spindle
  C: 19
  T: 400
  F0: 16
  block_channels: [32, 48, 64]
  dilations: [1, 2, 4]
  dropout: 0.1
  se_ratio: 4

graph:
  prior: distance        # identity | distance
  coords_csv: ./metadata/coords_10-20.csv
  channel_names: [ "C3", "C4", "O1", "O2", "Fp1", "Fp2", "F7", "F3", "Fz", "F4", "F8",
    "T3", "T4", "T5", "T6", "P3", "Pz", "P4", "Oz" ]
  normalize: true
  sigma: 0.15
  lambda_init: 0.0
  use_dynamic: true
  beta_init: 0.1

loss:
  det_weight: 1.0
  dice:
    enabled: true
    weight: 0.5
  tversky:
    enabled: false
    weight: 0.0
    alpha: 0.7
    beta: 0.3
  per_channel:
    enabled: false
    weight: 0.3
  bce:
    pos_weight: 5.0
    focal: false
    gamma: 2.0

train:
  optimizer: adamw
  lr: 1e-3
  weight_decay: 1e-4
  scheduler: onecycle
  epochs: 30
  batch_size: 64
  grad_clip: 1.0
  sampler:
    positive_fraction: 0.6
    hard_negatives: true

aug:
  time_jitter_ms: 80
  amp_scale: [0.9, 1.1]
  channel_dropout_p: 0.1
  time_mask_max_ms: 100

data:
  windows_npy: ./data/windows.npy
  labels_framewise: ./data/labels_framewise.npy
  labels_per_channel: ./data/labels_per_channel.npy
  sample_rate: 200
  val_fraction: 0.2

postproc:
  hysteresis:
    start: 0.6
    end: 0.4
  min_duration_s: 0.5

logging:
  wandb:
    enabled: true
    project: spindle_stgcn
    run_name: ${now:%Y%m%d-%H%M%S}
  save_every_epochs: 1
  plot_traces: true
  # NEW: Metrics logging settings
  eval_metrics_every_epochs: 5      # Compute full metrics every N epochs
  eval_train_metrics: false         # Also evaluate metrics on train set (slower)
  detection_threshold: 0.5          # Probability threshold for binary classification
  log_graphs: true                  # Log adjacency matrix heatmaps