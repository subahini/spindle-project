# config.yaml (updated for EDF + JSON labels)

model:
  name: unet1d        # unet1d | tcn1d | cnn2d
  in_channels:  ${data.n_channels}
  base: 32            # for unet1d only

data:
  source: edf         # edf | npy
  sfreq: 200.0
  window_sec: 2.0
  step_sec: 1.0
  n_channels: 16
  batch_size: 16
  num_workers: 2
  split_seed: 123
  sampler:
    kind: weighted   # not normal but weighted
    pos_weight: 10.0 # weight for windows that contain any positives      # try 5â€“20 for under 3%


  # EDF + JSON configuration
  edf:
    dir: ./data/edf/                    # Directory containing .edf files
    labels_json: ./data/labels/sleep_block_spindle_output_P002_1.json  # Path to JSON label file
    reference: car                      # car | average | []
    montage: standard_1020             # EEG montage
    bandpass: [0.3, 35.0]             # Bandpass filter [low, high] Hz
    notch_hz: [50, 60]                # Notch filter frequencies
    keep_channels: ['C3', 'C4', 'O1', 'O2', 'F3', 'F4', 'P3', 'P4', 'Fp1', 'Fp2', 'T3', 'T4', 'T5', 'T6', 'F7', 'F8']
  # if source=npy, set these:
  npy:
    x_path: ./data/X.npy   # [N, C, T]
    y_path: ./data/y.npy   # [N, T]


trainer:
  device: cuda                 # cuda | cpu
  epochs: 50
  lr: 0.001
  batch_size: ${data.batch_size}
  weight_decay: 0.0
  optimizer: adam             # sgd | adam | adamw
  loss: bce                   # bce | bce_pos | focal | dice | hybrid
  early_stopping_patience: 10
  grad_clip_norm: 0.0
  use_wandb: true
  wandb_project: eeg-spindle-detection
  model_name: ${model.name}
  run_name: null

  # loss params (read only if relevant)
  bce_pos:
    pos_weight: auto          # auto | float
  focal:
    alpha: 0.25
    gamma: 2.0
  dice:
    smooth: 1.0
  hybrid:
    w_bce: 1.0
    w_focal: 0.0
    w_dice: 0.0
    pos_weight: auto
    focal:
      alpha: 0.25
      gamma: 2.0
    dice:
      smooth: 1.0

eval:
  threshold: 0.2
  sweep_threshold: true
  log_curves: true
  use_val_best_threshold: true

logging:
  use_wandb: ${trainer.use_wandb}
  wandb_project: ${trainer.wandb_project}
  run_name: ${trainer.run_name}
  wandb_mode: null        # offline | disabled | null

paths:
  save_dir: ./_artifacts